#########################################################################
################  private ec2(web, was) ansible ###########################
#########################################################################


- hosts: 
  - web_asg
  - was_asg
  gather_facts: no
  vars: 
    ansible_ssh_common_args:
      -o ProxyCommand="ssh
      -o StrictHostKeyChecking=no
      -o UserKnownHostsFile=/dev/null
      -i ~/.ssh/ec2-key.pem
      -W %h:%p ec2-user@{{ hostvars[groups['project_ec2_bastion'][0]]["public_ip_address"] }}"   
  tasks:

############ ec2-user join group whell ###########
  - name: Add the user 'ec2-user' with a bash shell, appending the group 'wheel' 
    ansible.builtin.user:
      name: ec2-user
      shell: /bin/bash
      groups: wheel       
      append: yes    

############ create direrctory ansible ###########  
  - name: Create a directory "service"
    ansible.builtin.file:
      path: /home/ec2-user/service
      state: directory
      mode: '0755'


############ copy sudoers file ###########
  - name: Copy a "sudoers" file into place for ansible
    ansible.builtin.copy:
      src: ./sudoers
      dest: /etc/sudoers
      owner: root
      group: root    

############ create a .ssh directory  ###########
  - name: Create a directory ".ssh"
    ansible.builtin.file:
      path: /home/ec2-user/.ssh
      state: directory
      mode: '0755'

############ dnf update ###########  
  - name: dnf update
    ansible.builtin.shell: dnf update      

############ dnf install python, nfs, efs utils ###########  
  - name: Install the latest version of ansible, pyhon3-pip
    ansible.builtin.dnf:
      name:          
        - python3-pip
        - amazon-efs-utils
        - nfs-utils
      state: latest        

############ pip install flask, gunicorn, flask-core, requests, pymysql ########### 
  - name: Install python-pip packages with flask service
    ansible.builtin.pip:
      name:
        - flask
        - gunicorn        
        - requests
        - pymysql
        - flask-cors
      state: latest      


#########################################################################
################  private ec2(web) ansible ###########################
#########################################################################

- hosts: web_asg
  gather_facts: no
############ mount efs file system in web ec2 ###########                  
  # - name: Mount up device by UUID
  #   hosts: web_asg  
  #   ansible.posix.mount:
  #     path: /home/ec2-user/efs
  #     src: "{{ web_efs_result.file_system_id }}"
  #     fstype: nfs4
  #     state: mounted
  tasks:
  - name: Copy a "blind_web" file into place for ansible
    ansible.builtin.copy:
      src: /home/nana/pro/files/blind_web/
      dest: /home/ec2-user/service/
      mode: 755

  - name: Copy a "bilind_web.service" file into place for ansible
    ansible.builtin.copy:
      src: /home/nana/pro/files/web.service
      dest: /etc/systemd/system/blind_web.service
      owner: root
      group: root
      mode: 755      

  - name: Enable service blind_web.service and ensure 
    ansible.builtin.systemd_service:
      name: blind_web
      enabled: true
      daemon_reload: true
      state: start
      

#########################################################################
################  private ec2(was) ansible ###########################
#########################################################################      


- hosts: was_asg
  gather_facts: no
############ mount efs file system in was ec2 ###########                      
  # - name: Mount up device by UUID
  #   hosts: was_asg    
  #   ansible.posix.mount:
  #     path: /home/ec2-user/efs
  #     src: "{{ was_efs_result.file_system_id }}"
  #     fstype: nfs4
  #     state: mounted
  tasks:
  - name: Copy a "blind_was" file into place for ansible
    ansible.builtin.copy:
      src: /home/nana/pro/files/blind_was/
      dest: /home/ec2-user/service/
      mode: 755

  - name: Copy a "bilind_was.service" file into place for ansible
    ansible.builtin.copy:
      src: /home/nana/pro/files/was.service
      dest: /etc/systemd/system/blind_was.service
      owner: root
      group: root
      mode: 755    

  - name: Enable service blind_web.service and ensure 
    ansible.builtin.systemd_service:
      name: blind_was
      enabled: true
      daemon_reload: true
      state: start      