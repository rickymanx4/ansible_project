# create route table and connect subnet to routes
  - name: create ec2 VPC public subnet route table    
    amazon.aws.ec2_vpc_route_table:
      vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
      region: "{{ region }}"
      state: "{{ state }}"
      tags:
        Name: "{{ route_table_name_public}}"
      subnets: [ "{{ subnet_pub1_result.subnet.id }}", "{{ subnet_pub2_result.subnet.id }}"]
      routes:
        - dest: "{{ destinationCidrBlock }}" 
          gateway_id: "{{ igw_result.gateway_id }}"
    register: public_rt_result

  - name: create ec2 VPC web subnet route table    
    amazon.aws.ec2_vpc_route_table:
      vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
      region: "{{ region }}"
      state: "{{ state }}"
      tags:
        Name: "{{ route_table_name_web }}"
      subnets: [ "{{ subnet_web1_result.subnet.id }}", "{{ subnet_web2_result.subnet.id }}"]      
      routes:
        - dest: "{{ destinationCidrBlock }}" 
          gateway_id: "{{ test_nat_gateway_id }}"
          #gateway_id: "{{ nat_gateway_result.nat_gateway_id }}"
    register: web_rt_result

  - name: create ec2 VPC was subnet route table    
    amazon.aws.ec2_vpc_route_table:
      vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
      region: "{{ region }}"
      state: "{{ state }}"
      tags:
        Name: "{{ route_table_name_was }}"
      subnets: [ "{{ subnet_was1_result.subnet.id }}", "{{ subnet_was2_result.subnet.id }}"]      
      routes:
        - dest: "{{ destinationCidrBlock }}" 
          gateway_id: "{{ test_nat_gateway_id }}"
          #gateway_id: "{{ nat_gateway_result.nat_gateway_id }}"
    register: was_rt_result
