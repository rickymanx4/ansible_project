---
- hosts: localhost
  gather_facts: no
  connection: localhost
  vars_files:
    - ./vars.yaml
  tasks:
  - name: create ec2 vpc subnet_pub1
    amazon.aws.ec2_vpc_subnet:
      vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
      region: "{{ region }}"
      az: "{{ zone1 }}"      
      state: "{{ state }}"
      cidr: "{{ subNetCidrBlock_pub1 }}"
      map_public: yes
      resource_tags:
        Name: "{{ subnet_name_pub1 }}"
    register: subnet_pub1_result

  - name: create ec2 vpc subnet_pub2
    amazon.aws.ec2_vpc_subnet:
      vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
      region: "{{ region }}"
      az: "{{ zone2 }}"      
      state: "{{ state }}"
      cidr: "{{ subNetCidrBlock_pub2 }}"
      map_public: yes
      resource_tags:
        Name: "{{ subnet_name_pub2 }}"
    register: subnet_pub2_result    
  - name: create ec2-bastion security group
    amazon.aws.ec2_group:
      vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
      region: "{{ region }}"
      state: "{{ state }}"
      name: "{{ security_group_name_bastion }}"
      description: "{{ security_group_name_bastion }}"
      tags:
        Name: "{{ security_group_name_bastion  }}"
      rules:
      - proto: tcp
        ports:
        - 22
        cidr_ip: "{{ destinationCidrBlock }}"
        rule_desc: allow all on port 22
      - proto: tcp
        ports:
        - 80
        cidr_ip: "{{ destinationCidrBlock }}"
        rule_desc: allow all on port 80        
    register: security_group_bastion_result

  - name: Create an EKS cluster 
    community.aws.eks_cluster:
      name: "{{ eks_cluster_name }}"
      version: 1.29
      role_arn: "{{ eks_cluster_role }}"
      subnets:
        - "{{ subnet_pub1_result.subnet.id }}"
        - "{{ subnet_pub2_result.subnet.id }}"
      security_groups:
        - "{{ security_group_bastion.result.group_id }}"        
    register: eks_cluster_result


  - name: create nodegroup
    community.aws.eks_nodegroup:
      name: test_nodegroup
      state: present
      cluster_name: test_cluster
      node_role: arn:aws:eks:us-east-1:1231231123:role/asdf
      subnets:
        - subnet-qwerty123
        - subnet-asdfg456
      scaling_config:
        min_size: 1
        max_size: 2
        desired_size: 1
      disk_size: 20
      instance_types: 't3.micro'
      ami_type: 'AL2_x86_64'
      labels:
        'teste': 'test'
      taints:
        - key: 'test'
          value: 'test'
          effect: 'NO_SCHEDULE'
      capacity_type: 'ON_DEMAND'    