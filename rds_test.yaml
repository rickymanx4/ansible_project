---
- hosts: localhost
  gather_facts: no
  connection: localhost
  vars_files:
    - ./vars.yaml  
  tasks:
  - name: create a new ec2 VPC    
    amazon.aws.ec2_vpc_net:     
      name: "{{ vpc_name }}" 
      cidr_block: "{{ vpcCidrBlock }}"
      region: "{{ region }}"
      # enable dns support 
      dns_support: yes
      # enable dns hostnames
      dns_hostnames: yes
      state: "{{ state }}"
    register: ec2_vpc_net_result
    
  - name: create ec2 vpc subnet_db1
    amazon.aws.ec2_vpc_subnet:
      vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
      region: "{{ region }}"
      az: "{{ zone1 }}"      
      state: "{{ state }}"
      cidr: "{{ subNetCidrBlock_db1 }}"
      map_public: no
      resource_tags:
        Name: "{{ subnet_name_db1 }}"
    register: subnet_db1_result    

  - name: create ec2 vpc subnet_db2
    amazon.aws.ec2_vpc_subnet:
      vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
      region: "{{ region }}"
      az: "{{ zone2 }}"      
      state: "{{ state }}"
      cidr: "{{ subNetCidrBlock_db2 }}"
      map_public: no
      resource_tags:
        Name: "{{ subnet_name_db2 }}"
    register: subnet_db2_result    

  - name: create ec2-db security group
    amazon.aws.ec2_group:
      vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
      region: "{{ region }}"
      state: "{{ state }}"
      name: "{{ security_group_name_db }}"
      description: "{{ security_group_name_db }}"
      tags:
        Name: "{{ security_group_name_db  }}"
      rules:
      - proto: tcp
        ports:
        - 3306
        group_name: "{{ security_group_name_was }}"
      - proto: tcp
        ports:
        - 3306
        group_name: "{{ security_group_name_web }}"      
      - proto: tcp
        ports:
        - 3306
        group_name: "{{ security_group_name_bastion }}"      
        rule_desc: allow all on port 3306      
    register: security_group_db_result

  # - name: Create RDS instance
  #   amazon.aws.rds_instance:
  #     command: create
  #     db_instance_identifier: "{{ rds_ec2_name_01 }}"
  #     engine: mysql
  #     engine_version: "8.0.35"
  #     instance_class: db.t2.micro
  #     allocated_storage: 20
  #     db_name: "{{ rds_name_01 }}"
  #     master_username: my_username
  #     master_user_password: my_password
  #     db_security_groups:  [ "{{ security_group_db_result.group_id }}" ]
  #     db_subnet_group_name: "{{ subnet_db1_result.subnet.name }}"       
  #     wait_for_completion: yes
  #     tags:
  #       - Name:  "{{ rds_name_01 }}"

  # - name: Create DB instance with added IAM role
  #   amazon.aws.rds_instance:
  #     id: "my-instance-id"
  #     state: present
  #     engine: mysql
  #     engine_version: "8.0.35"
  #     username: my_user
  #     password: passw0rd
  #     db_instance_class: db.t2.small
  #     allocated_storage: 20
  #     iam_roles:
  #       - role_arn: "{{ iam_role.arn }}"
  #         feature_name: 's3Export'        

  # - name: change a subnet group to RDS
  #   amazon.aws.rds_subnet_group:
  #     state: "{{ state }}"
  #     name: rds_subnets
  #     description: RDS subnet      
  #     region: "{{ region }}"
  #     subnets:
  #       - "{{ subnet_db1_result.subnet.id }}"
  #       - "{{ subnet_db2_result.subnet.id }}"

  # - name: create a subnet group to RDS for web
  #   amazon.aws.rds_subnet_group:
  #     name: rdswebsubnet
  #     description: RDS subnet for web
  #     vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
  #     subnet_name: "{{ subnet_name_db1 }}"
  #     cidr_block: "{{ subNetCidrBlock_db1 }}"
  #     availability_zone: "{{ zone1 }}"      
  #     tags:
  #       name: "{{ subnet_name_db1 }}"

  # - name: change a subnet group to RDS
  #   amazon.aws.rds_subnet_group:
  #     name: rdswassubnet
  #     description: RDS subnet for was
  #     vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
  #     subnet_name: "{{ subnet_name_db2 }}"
  #     cidr_block: "{{ subNetCidrBlock_db2 }}"
  #     availability_zone: "{{ zone2 }}"      
  #     tags:
  #       name: "{{ subnet_name_db2 }}"   
    

# # create RDS instance with mysql
#   - name: Create a DB instance 
#     amazon.aws.rds_instance:  
#       state: "{{ state }}"
#       engine: "mysql"
#       engine_version: "8.0.35"
#       iam_roles: 
#         - feature_name: "webstorage"
#         - role_arn: "{{ instance_role }}"          
#       db_name: "{{ rds_name_01 }}"
#       db_instance_class: "db.t2.small"
#       db_security_groups: 
#         - "{{ security_group_db_result.group_id }}"
#       db_subnet_group_name: "{{ subnet_db1_result.subnet.name }}" 
#       db_instance_identifier: "{{ rds_ec2_name_01 }}"      
#       master_username: "aduser"
#       master_user_password: "pass1234@@"
#       multi_az: true
#       storage_type: "gp3"
#       allocated_storage: 20             
#       publicly_accessible: false
#     register: rds1_result     


  - name: Add a new security group without purge
    amazon.aws.rds_instance:
      id: "{{ rds_ec2_name_01 }}" 
      db_instance_class: "db.t2.small"      
      db_instance_identifier: "{{ rds_ec2_name_01 }}"
      db_subnet_group_name: subnet-0b2f7004b38846241      
      state: present
      engine: "mysql"      
      vpc_security_group_ids:
        - sg-0fd0f95d07641a5f7
    register: result      