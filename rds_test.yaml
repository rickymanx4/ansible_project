---
- hosts: localhost
  gather_facts: no
  connection: localhost
  vars_files:
    - ./vars.yaml  
  tasks:
  - name: Include task list in play vpc
    ansible.builtin.import_tasks:
      file: "./tasks/1_vpc.yaml"
    
  - name: Include task list in play subnet
    ansible.builtin.import_tasks:
      file: "./tasks/2_subnet.yaml"    

  - name: Include task list in play security_group
    ansible.builtin.import_tasks:
      file: "./tasks/3_security_group.yaml" 

  # - name: Create RDS instance
  #   amazon.aws.rds_instance:
  #     command: create
  #     db_instance_identifier: "{{ rds_ec2_name_01 }}"
  #     engine: mysql
  #     engine_version: "8.0.35"
  #     instance_class: db.t2.micro
  #     allocated_storage: 20
  #     db_name: "{{ rds_name_01 }}"
  #     master_username: my_username
  #     master_user_password: my_password
  #     db_security_groups:  [ "{{ security_group_db_result.group_id }}" ]
  #     db_subnet_group_name: "{{ subnet_db1_result.subnet.name }}"       
  #     wait_for_completion: yes
  #     tags:
  #       - Name:  "{{ rds_name_01 }}"

  # - name: Create DB instance with added IAM role
  #   amazon.aws.rds_instance:
  #     id: "my-instance-id"
  #     state: present
  #     engine: mysql
  #     engine_version: "8.0.35"
  #     username: my_user
  #     password: passw0rd
  #     db_instance_class: db.t2.small
  #     allocated_storage: 20
  #     iam_roles:
  #       - role_arn: "{{ iam_role.arn }}"
  #         feature_name: 's3Export'        
  - name: change a subnet group to RDS
    amazon.aws.rds_subnet_group:
      state: "{{ state }}"
      name: rds_subnets
      description: RDS subnet
      subnets:
        - "{{ subnet_db1_result.subnet.id }}"
        - "{{ subnet_db2_result.subnet.id }}"

  # - name: create a subnet group to RDS for web
  #   amazon.aws.rds_subnet_group:
  #     name: rdswebsubnet
  #     description: RDS subnet for web
  #     vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
  #     subnet_name: "{{ subnet_name_db1 }}"
  #     cidr_block: "{{ subNetCidrBlock_db1 }}"
  #     availability_zone: "{{ zone1 }}"      
  #     tags:
  #       name: "{{ subnet_name_db1 }}"

  # - name: change a subnet group to RDS
  #   amazon.aws.rds_subnet_group:
  #     name: rdswassubnet
  #     description: RDS subnet for was
  #     vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
  #     subnet_name: "{{ subnet_name_db2 }}"
  #     cidr_block: "{{ subNetCidrBlock_db2 }}"
  #     availability_zone: "{{ zone2 }}"      
  #     tags:
  #       name: "{{ subnet_name_db2 }}"   
    

# create RDS instance with mysql
  - name: Create a DB instance 
    amazon.aws.rds_instance:  
      state: "{{ state }}"
      engine: "mysql"
      engine_version: "8.0.35"
      iam_roles: 
        - feature_name: "webstorage"
        - role_arn: "{{ instance_role }}"          
      db_name: "{{ rds_name_01 }}"
      db_instance_class: "db.t2.small"
      db_security_groups: 
        - "{{ security_group_db_result.group_id }}"
      db_subnet_group_name: "{{ subnet_db1_result.subnet.name }}" 
      db_instance_identifier: "{{ rds_ec2_name_01 }}"      
      master_username: "aduser"
      master_user_password: "pass1234@@"
      multi_az: true
      storage_type: "gp3"
      allocated_storage: 20             
      publicly_accessible: false
    register: rds1_result       